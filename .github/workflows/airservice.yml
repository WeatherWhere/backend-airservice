name: Java CI with Gradle, Build and Push Docker Image to ECS and deploy in EC2
on:
  push:
    branches: [ "feat/edit-githubaction-containerversion" ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: airservice
  ECR_REGISTRY: public.ecr.aws/a5p8o7q9
  SSH_USERNAME: ubuntu
  IMAGE_TAG_PREFIX: v

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    # Ref: https://github.com/gradle/gradle-build-action
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # https://github.com/marketplace/actions/import-gpg
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GIT_SECRET_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Reveal Git-Secret
        run: |
          sudo apt-get install git-secret -y
          git-secret reveal -fp ${{ secrets.GPG_PASSPHRASE }}

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          docker build -t ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}} -f Dockerfile .
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}
          echo "image=${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}" >> $GITHUB_OUTPUT

#      - name: Commit changes
#        uses: EndBug/add-and-commit@v7
#        with:
#          add: .
#          message: 'Auto-commit new image tag - ${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}'
#          repository: 'backend-kubernetes'
#          branch: 'test/argoCD_deploy'
#          path: 'airservice/deploy.yml'
#
#
#      - name: Update Kubernetes YAML
#        run: |
#          ls
#          sed -i "s|image: {{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}.*|image: {{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}|g" airservice/deploy.yml

      - name: SSH into EC2 Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_instance_publicIP }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
            docker pull ${{env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}
            docker rm -f ${{ env.ECR_REPOSITORY }} || true && docker run -itd --name ${{ env.ECR_REPOSITORY }} -p 8090:8080 ${{env.ECR_REGISTRY}}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}

      - name: Checkout Kubernetes YAML
        uses: actions/checkout@v3
        with:
          repository: 'weatherwhere/backend-kubernetes'
          ref: 'test/argoCD_deploy'
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Update Kubernetes YAML
        run: |
          ls
          echo "BEFORE sed............"
          cat airservice/deploy.yml
          sed -i.bak -E 's|image: {{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}[0-9]\+|image: {{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}|g' airservice/deploy.yml
          echo "AFTER sed............"
          cat airservice/deploy.yml

      - name: Commit changes
        run: |
          git config --global user.name "hwang-jubin"
          git config --global user.email "hjb06288@gmail.com"
          git add airservice/deploy.yml
          git commit -m "Auto-commit new image tag - ${{ env.IMAGE_TAG_PREFIX }}${{github.run_number}}"
          git push origin test/argoCD_deploy
